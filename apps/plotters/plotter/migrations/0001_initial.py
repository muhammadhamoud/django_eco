# Generated by Django 4.2 on 2024-01-14 09:22

import core.models
from django.db import migrations, models
import django.db.models.deletion
import parler.fields
import parler.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, help_text='Enter a slug for the content.', null=True, unique=True, verbose_name='Slug')),
                ('image', models.ImageField(blank=True, help_text='Upload an image for the content.', null=True, upload_to=core.models.base_image_path, validators=[core.models.validate_image_extension], verbose_name='Image')),
                ('icon', models.CharField(blank=True, help_text='Enter an icon for the content.', max_length=100, null=True, verbose_name='Icon')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, help_text='The date and time when the content was created.', verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='The date and time when the content was last modified.', verbose_name='Modified')),
            ],
            options={
                'verbose_name': 'Application',
                'verbose_name_plural': 'Applications',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Body',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, help_text='Enter a slug for the content.', null=True, unique=True, verbose_name='Slug')),
                ('image', models.ImageField(blank=True, help_text='Upload an image for the content.', null=True, upload_to=core.models.base_image_path, validators=[core.models.validate_image_extension], verbose_name='Image')),
                ('icon', models.CharField(blank=True, help_text='Enter an icon for the content.', max_length=100, null=True, verbose_name='Icon')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, help_text='The date and time when the content was created.', verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='The date and time when the content was last modified.', verbose_name='Modified')),
            ],
            options={
                'verbose_name': 'Body',
                'verbose_name_plural': 'Bodies',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, help_text='Enter a slug for the content.', null=True, unique=True, verbose_name='Slug')),
                ('image', models.ImageField(blank=True, help_text='Upload an image for the content.', null=True, upload_to=core.models.base_image_path, validators=[core.models.validate_image_extension], verbose_name='Image')),
                ('icon', models.CharField(blank=True, help_text='Enter an icon for the content.', max_length=100, null=True, verbose_name='Icon')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, help_text='The date and time when the content was created.', verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='The date and time when the content was last modified.', verbose_name='Modified')),
            ],
            options={
                'verbose_name': 'Car',
                'verbose_name_plural': 'Cars',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, help_text='Upload an image for the content.', null=True, upload_to=core.models.base_image_path, validators=[core.models.validate_image_extension], verbose_name='Image')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cars', to='plotter.car')),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Make',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, help_text='Enter a slug for the content.', null=True, unique=True, verbose_name='Slug')),
                ('image', models.ImageField(blank=True, help_text='Upload an image for the content.', null=True, upload_to=core.models.base_image_path, validators=[core.models.validate_image_extension], verbose_name='Image')),
                ('icon', models.CharField(blank=True, help_text='Enter an icon for the content.', max_length=100, null=True, verbose_name='Icon')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, help_text='The date and time when the content was created.', verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='The date and time when the content was last modified.', verbose_name='Modified')),
            ],
            options={
                'verbose_name': 'Make',
                'verbose_name_plural': 'Makes',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, help_text='Enter a slug for the content.', null=True, unique=True, verbose_name='Slug')),
                ('image', models.ImageField(blank=True, help_text='Upload an image for the content.', null=True, upload_to=core.models.base_image_path, validators=[core.models.validate_image_extension], verbose_name='Image')),
                ('icon', models.CharField(blank=True, help_text='Enter an icon for the content.', max_length=100, null=True, verbose_name='Icon')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, help_text='The date and time when the content was created.', verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='The date and time when the content was last modified.', verbose_name='Modified')),
                ('make', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='makes', to='plotter.make')),
            ],
            options={
                'verbose_name': 'Model',
                'verbose_name_plural': 'Models',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Trim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, help_text='Enter a slug for the content.', null=True, unique=True, verbose_name='Slug')),
                ('image', models.ImageField(blank=True, help_text='Upload an image for the content.', null=True, upload_to=core.models.base_image_path, validators=[core.models.validate_image_extension], verbose_name='Image')),
                ('icon', models.CharField(blank=True, help_text='Enter an icon for the content.', max_length=100, null=True, verbose_name='Icon')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, help_text='The date and time when the content was created.', verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='The date and time when the content was last modified.', verbose_name='Modified')),
                ('model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='models', to='plotter.model')),
            ],
            options={
                'verbose_name': 'Trim',
                'verbose_name_plural': 'Trims',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(help_text='Enter the year', unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='car',
            name='trim',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='car_trims', to='plotter.trim'),
        ),
        migrations.AddField(
            model_name='car',
            name='year',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='years', to='plotter.year'),
        ),
        migrations.CreateModel(
            name='TrimTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(blank=True, help_text='Enter a name for the content.', max_length=100, null=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, help_text='Enter a description for the content.', null=True, verbose_name='Description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='plotter.trim')),
            ],
            options={
                'verbose_name': 'Trim Translation',
                'db_table': 'plotter_trim_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ModelTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(blank=True, help_text='Enter a name for the content.', max_length=100, null=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, help_text='Enter a description for the content.', null=True, verbose_name='Description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='plotter.model')),
            ],
            options={
                'verbose_name': 'Model Translation',
                'db_table': 'plotter_model_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='MakeTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(blank=True, help_text='Enter a name for the content.', max_length=100, null=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, help_text='Enter a description for the content.', null=True, verbose_name='Description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='plotter.make')),
            ],
            options={
                'verbose_name': 'Make Translation',
                'db_table': 'plotter_make_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ImagesTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(blank=True, help_text='Enter a name for the content.', max_length=100, null=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, help_text='Enter a description for the content.', null=True, verbose_name='Description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='plotter.images')),
            ],
            options={
                'verbose_name': 'Image Translation',
                'db_table': 'plotter_images_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CarTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(blank=True, help_text='Enter a name for the content.', max_length=100, null=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, help_text='Enter a description for the content.', null=True, verbose_name='Description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='plotter.car')),
            ],
            options={
                'verbose_name': 'Car Translation',
                'db_table': 'plotter_car_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='BodyTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(blank=True, help_text='Enter a name for the content.', max_length=100, null=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, help_text='Enter a description for the content.', null=True, verbose_name='Description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='plotter.body')),
            ],
            options={
                'verbose_name': 'Body Translation',
                'db_table': 'plotter_body_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ApplicationTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(blank=True, help_text='Enter a name for the content.', max_length=100, null=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, help_text='Enter a description for the content.', null=True, verbose_name='Description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='plotter.application')),
            ],
            options={
                'verbose_name': 'Application Translation',
                'db_table': 'plotter_application_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
    ]
